use strict;
use Carp;

# "main"
{
    my %args = parse_args();
    install_inline() unless exists $args{shoddy};
    run_develversion_tests();
    run_releaseversion_tests();
    print "\nIf you got this far, then the tests passed.\n";
}

sub system_or_die {
    my (@command) = @_;
    my $command = join " ", @command;
    print "# $command\n";
    system(@command) == 0 or die "Couldn't $command: $!";
}

sub chdir_or_die {
    my ($dir) = @_;
    chdir($dir) or Carp::croak "Couldn't chdir to $dir: $!\n";
}

sub mkdir_or_die {
    my ($dir) = @_;
    -d $dir or mkdir($dir) or Carp::croak "Couldn't mkdir $dir: $!\n";
}

sub parse_args {
    my %args = map { s/^-*//g; $_ => 1 } @ARGV;
    @ARGV = (); # (This has to happen so "make dist" tries to use your args)
    %args
}

sub install_inline {
    system_or_die "sudo make install";
}

sub run_develversion_tests {
    chdir_or_die('modules/Math/Simple');
    run_perl_tests();
}

sub run_releaseversion_tests {
    # Create the tarball...
    my $module_dashy_name = 'Math-Simple-1.25';
    my $tarball_name = "$module_dashy_name.tar.gz";
    -e $tarball_name and system_or_die "rm $tarball_name";
    system_or_die "make dist";
    -e $tarball_name or die "No tarball!";

    # Extract the contents...
    chdir_or_die '..';
    my $untar_to_dir_name = 'dist';
    mkdir_or_die $untar_to_dir_name or die;
    chdir_or_die $untar_to_dir_name;
    system_or_die "tar xvzf ../Simple/$tarball_name";

    # Verify contents...
    chdir_or_die $module_dashy_name;
    my $bootstrap_pm_name = '_bootstrap/makemaker.pm';
    -e $bootstrap_pm_name or die "No $bootstrap_pm_name";
    run_perl_tests();

    # TODO: Need a way to simulate a setup where Inline::devel is not
    # installed.  "sudo mv $INC{Inline::devel} /tmp" ?

    # Clean up...
    chdir_or_die '../..';
    system_or_die "rm -rf $untar_to_dir_name";
}

sub run_perl_tests {
    -e 'Makefile' and system_or_die "make purge";
    system_or_die "perl Makefile.PL";
    system_or_die "make";
    system_or_die "make test";
}

# vim: ft=perl:
