use strict;

# "main"
{
    my %args = parse_args();
    install_inline() unless exists $args{shoddy};
    chdir_to_sample_modules_dir();
    start_over();
    run_develversion_tests();
    run_releaseversion_tests();
    print "\nIf you got this far, then the tests passed.\n";
}

sub system_or_die {
    my (@command) = @_;
    my $command = join " ", @command;
    print "# $command\n";
    system(@command) == 0 or die "Couldn't $command: $!";
}

sub parse_args {
    my %args = map { s/^-*//g; $_ => 1 } @ARGV;
    @ARGV = (); # (This has to happen so "make dist" tries to use your args)
    %args
}

sub install_inline {
    system_or_die "sudo make install";
}

sub chdir_to_sample_modules_dir {
    chdir 'modules/Math/Simple' or die;
}

sub run_develversion_tests {
    system_or_die "make test";
}

sub run_releaseversion_tests {
    my $tarball_name = 'Math-Simple-1.23.tar.gz';
    -e $tarball_name and system_or_die "rm $tarball_name";
    system_or_die "make dist";
    -e $tarball_name or die "No tarball!";

    my $untar_to_dir_name = '../dist';
    mkdir $untar_to_dir_name or die;
    chdir $untar_to_dir_name or die;

    my $bootstrap_pm_name = 'Inline/MakeMaker/Bootstrap.pm';
    -e $bootstrap_pm_name or die "No $bootstrap_pm_name";
    system_or_die "rm -rf $untar_to_dir_name";
}

sub start_over {
    -e 'Makefile' and system_or_die "make purge";
    system_or_die "perl Makefile.PL";
    system_or_die "make";
}

# vim: ft=perl:
