package Inline::MakeMaker;

my (undef, $imm_code, $check_code) = 
   (<<__EOVIMTRICK__, <<'__EOIMM__', <<'__EOCHECK__');
__EOVIMTRICK__
package Inline::MakeMaker;
use strict;
use Carp;
$Inline::MakeMaker::VERSION = '0.50';

my (@modules, @versions);

sub import {
    my $package = caller;
    require ExtUtils::MakeMaker;
    no strict 'refs';
    *{"${package}::WriteInlineMakefile"} = \&Inline::MakeMaker::WriteInlineMakefile;
}

sub WriteInlineMakefile {
    croak "Inline::MakeMaker::WriteMakefile needs even number of args\n" 
      if @_ % 2;
    my %args = @_;
    croak "Inline::MakeMaker::WriteMakefile requires the NAME parameter\n"
      unless $args{NAME};
    croak <<END unless ($args{VERSION} || $args{VERSION_FROM});
Inline::MakeMaker::WriteMakefile requires either the VERSION or
VERSION_FROM parameter.
END
    my $version = $args{VERSION} || 
      ExtUtils::MM_Unix->parse_version($args{VERSION_FROM})
	or croak "Can't determine version for $args{NAME}\n";
    croak <<END unless $version =~ /^\d\.\d\d$/;
Invalid version '$version' for $args{NAME}.
Must be of the form #.##. (For instance '1.23')
END
    push @versions, $version;

    my ($name, $object);
    if (defined $args{NAME}) {
	$name = $args{NAME};
	$object = (split(/::/, $name))[-1];
	push @modules, $name;
    }
    else {
	croak "Inline::MakeMaker::WriteMakefile requires a NAME parameter";
    }

    # XXX add check to see if the environment is Devel or Install
    mkdir '_blib';
    mkdir '_blib/Math';
    `cp Simple.pm _blib/Math`;
    # XXX the following requires Inline::Devel
    # XXX we may need to write a .inl file to see if source code has changed 
    system qq{perl -I_blib -MInline=_PREP_ -M$name -e1}; 
    `rm -fr _blib`;

    # Provide a convenience rule to clean up Inline's messes
    $args{clean} = { FILES => "_Inline $object.inl" } 
      unless defined $args{clean};

    &ExtUtils::MakeMaker::WriteMakefile(%args);
}

1;
__EOIMM__
# Note to module authors:
# 
#   This file has been autogenerated and added to your MANIFEST. Please
# don't delete it. You need to distribute it with your module. If you
# don't, people with older installs of Inline (0.40 - 0.43) may not
# be able to install your module properly.
# 
use Inline::MakeMaker;
my $desired_version = "0.50";
my $version = $Inline::MakeMaker::VERSION;
my $explanation = <<EOEXPLANATION;

Ooops!!!
You have Inline::MakeMaker v$version installed on your system.  
This installation cannot proceed.

To fix this, either:
    - Upgrade to Inline v$desired_version (or greater)
or
    - Remove $INC{'Inline/MakeMaker.pm'}
or
    - Run this:   perl -I. Makefile.PL
    - Instead of: perl Makefile.PL

EOEXPLANATION

die $explanation if $version lt $desired_version;
__EOCHECK__

#==============================================================================
my $dir = 'Inline';
-d $dir or mkdir($dir) or die "Couldn't mkdir('$dir'): $!";

write_file("$dir/MakeMaker.pm", $imm_code);
require "./$dir/MakeMaker.pm";
write_file("_inline_check.PL", $check_code);

sub write_file {
    my ($file, $code) = @_;
    open(FILE, ">$file") or die "Couldn't open $file - $!";
    print FILE $code;
    close(FILE);
}

1;
